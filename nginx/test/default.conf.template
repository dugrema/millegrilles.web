# Source: https://www.digitalocean.com/community/tutorials/how-to-deploy-a-meteor-js-application-on-ubuntu-14-04-with-nginx

server_tokens off; # for security-by-obscurity: stop displaying nginx version

# this is the internal Docker DNS, cache only for 60s
resolver 127.0.0.11 valid=60s;

# Google DNS resolver, 5 minutes
# resolver 8.8.8.8 valid=300s;

server_names_hash_max_size 512;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# HTTP
server {
  listen 80 default_server; # if this is not a default server, remove "default_server"
  listen [::]:80 default_server ipv6only=on;

  # Max 500K upload public default
  client_max_body_size 500K;

  root /usr/share/nginx/html;
  index index.html index.htm;
}

# HTTPS server
# Serveur https par defaut
server {
    listen 443 default_server ssl http2; # we enable SPDY here
    listen [::]:443 default_server ssl http2 ipv6only=on;

    # Max 500K upload public default
    client_max_body_size 500K;

    root /usr/share/nginx/html; # root is irrelevant
    index index.html index.htm; # this is also irrelevant

    # Public avec OCSP
    ssl_certificate /certs/Hohet7Jn4Za6.pki.coupdoeil.cert.20200510222814; # full path to SSL certificate
    ssl_certificate_key /certs/Hohet7Jn4Za6.pki.coupdoeil.key.20200510222814; # full path to SSL key
    ssl_stapling on;
    ssl_stapling_verify on;

    # performance enhancement for SSL
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # safety enhancement to SSL: make sure we actually use a safe cipher
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

    # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    add_header Strict-Transport-Security "max-age=31536000;";

    # Vitrine
    location /vitrine/ {
      proxy_pass https://mg-dev3.maple.maceroc.com:3004;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
    location /vitrine_wss/ {
      proxy_pass https://mg-dev3.maple.maceroc.com:3004;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    # Tracker torrent
    location /announce/ {
      proxy_pass https://mg-dev3.maple.maceroc.com:3004;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /scrape/ {
      proxy_pass https://mg-dev3.maple.maceroc.com:3004;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

}
