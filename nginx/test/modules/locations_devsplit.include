resolver 192.168.2.1 valid=30s;

# Remplacer les proxy_pass des modules a tester

set $upstream_monitor   http://192.168.2.131:8280;

set $upstream_node_millegrilles   https://192.168.2.131:3001;
set $upstream_react_millegrilles  https://192.168.2.131:3001;   # 3002 separe

set $upstream_node_coupdoeil      https://192.168.2.131:3003;
set $upstream_react_coupdoeil     https://192.168.2.131:3003;   # 3004

set $upstream_node_publication    https://192.168.2.131:3023;
set $upstream_react_publication   https://192.168.2.131:3024;   # 3024

set $upstream_node_vitrine        https://192.168.2.131:3025;
set $upstream_react_vitrine       https://192.168.2.131:3026;   # 3026

set $upstream_node_senseurspassifs  https://192.168.2.131:3013;
set $upstream_react_senseurspassifs https://192.168.2.131:3014;  # 3014

set $upstream_redmine             https://mg-dev4.maple.maceroc.com:3011;

set $upstream_node_grosfichiers   https://192.168.2.131:3015;
set $upstream_react_grosfichiers  https://192.168.2.131:3015;  # 3016
set $upstream_node_fichiers       https://mg-dev4:3021;

set $upstream_node_place          https://192.168.2.131:3027;
set $upstream_react_place         https://192.168.2.131:3028;  # 3028

include /etc/nginx/conf.d/modules/error_page.conf.include;

# Monitor
location /test {
  alias /var/opt/millegrilles/nginx/html/test;
}

# Monitor
location /administration {
  proxy_pass        $upstream_monitor;
  include /etc/nginx/conf.d/component_base.include;
}

# Monitor
location /installation {
  proxy_pass        $upstream_monitor;
  include /etc/nginx/conf.d/component_base.include;
}

location /fichiers/public3 {
  # Redirect pour AWS S3/CloudFront
  if ($args ~* "preview=1") {
    rewrite ^/fichiers/(public/[0-9a-f\-]+).*$ https://d2skvkszw3g274.cloudfront.net/QME8SjhaCFySD9qBt1AikQ1U7WxieJY2xDg2JCMczJST/$1_preview_$arg_preview? redirect;
  }
  if ($args ~* "video=[0-9p]+") {
    rewrite ^/fichiers/(public/[0-9a-f\-]+).*$ https://d2skvkszw3g274.cloudfront.net/QME8SjhaCFySD9qBt1AikQ1U7WxieJY2xDg2JCMczJST/$1_video_$arg_video? redirect;
  }
  rewrite ^/fichiers/(public/.*)$ https://d2skvkszw3g274.cloudfront.net/QME8SjhaCFySD9qBt1AikQ1U7WxieJY2xDg2JCMczJST/$1 redirect;
}

location /fichiers/public {
  slice  5m;

  proxy_cache       cache_fichiers;
  proxy_cache_lock  on;
  proxy_cache_background_update on;

  proxy_cache_key   $uri$is_args$args$slice_range;
  proxy_set_header  Range $slice_range;
  proxy_cache_valid 200 206 1d;

  proxy_cache_use_stale error timeout updating
                        http_500 http_502 http_503 http_504;

  #proxy_headers_hash_bucket_size 64;

  proxy_pass        $upstream_node_fichiers;

  # Mapping certificat client pour connexion consignationfichiers
  proxy_ssl_certificate     /certs_mg/pki.nginx.cert;
  proxy_ssl_certificate_key /certs_mg/pki.nginx.key;

  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;
  proxy_ssl_verify       on;
  proxy_ssl_verify_depth 1;

  # include /etc/nginx/conf.d/component_base_auth.include;
  include /etc/nginx/conf.d/auth_public.include;
  include /etc/nginx/conf.d/component_base.include;
}

location /fichiers {
  slice  5m;

  proxy_cache       cache_fichiers;
  proxy_cache_lock  on;
  proxy_cache_background_update on;

  proxy_cache_key   $uri$is_args$args$slice_range;
  proxy_set_header  Range $slice_range;
  proxy_cache_valid 200 206 1d;

  proxy_cache_use_stale error timeout updating
                        http_500 http_502 http_503 http_504;

  #proxy_headers_hash_bucket_size 64;

  proxy_pass        $upstream_node_fichiers;

  # Mapping certificat client pour connexion consignationfichiers
  proxy_ssl_certificate     /certs_mg/pki.nginx.cert;
  proxy_ssl_certificate_key /certs_mg/pki.nginx.key;

  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;
  proxy_ssl_verify       on;
  proxy_ssl_verify_depth 1;

  # include /etc/nginx/conf.d/component_base_auth.include;
  include /etc/nginx/conf.d/auth_public.include;
  include /etc/nginx/conf.d/component_base.include;
}

location /backup {
  proxy_pass        $upstream_node_fichiers;

  # Mapping certificat client pour connexion consignationfichiers
  proxy_ssl_certificate     /certs_mg/pki.nginx.cert;
  proxy_ssl_certificate_key /certs_mg/pki.nginx.key;

  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;
  proxy_ssl_verify       on;
  proxy_ssl_verify_depth 1;

  include /etc/nginx/conf.d/component_base_auth.include;
}

# Verification de l'authentification
# Invoque pour **chaque** appel a nginx sous une page prive/protegee
location = /millegrilles/authentification/verifier {
  proxy_pass        $upstream_node_millegrilles;

  proxy_pass_request_body off; # no need to send the POST body
  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;

  proxy_set_header  Content-Length "";
  proxy_set_header  X-Real-IP $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Proto $scheme;
}

location = /millegrilles/authentification/verifier_public {
  proxy_pass        $upstream_node_millegrilles;

  proxy_pass_request_body off; # no need to send the POST body
  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;

  proxy_set_header  Content-Length "";
  proxy_set_header  X-Real-IP $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Proto $scheme;
}

# Authentification par usager autre que proprietaire
location = /millegrilles/authentification/verifierUsager {
  proxy_pass        $upstream_node_millegrilles;

  proxy_ssl_trusted_certificate /certs_mg/pki.millegrille;

  proxy_set_header  X-Real-IP $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Proto $scheme;
}

# Chargement de l'application dev React /millegrilles
# /millegrilles
# /millegrilles/sock-js.node
# /millegrilles/main.*
# /millegrilles/static/*
location ~ (^/millegrilles/?$|^/millegrilles/index.html|^/millegrilles/(sockjs-node|main\..*|static/)) {
 proxy_pass        $upstream_react_millegrilles;

 #proxy_set_header  X-Real-IP $remote_addr;
 #proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
 #proxy_set_header  X-Forwarded-Proto $scheme;

 # Support WSS
 #proxy_set_header  Upgrade $http_upgrade;
 #proxy_set_header  Connection $connection_upgrade;
 #proxy_set_header  Host $host;

 include /etc/nginx/conf.d/component_base.include;

 #gzip on;
 #gzip_static on;
 #gzip_vary on;
 #gzip_proxied any;
 #gzip_comp_level 6;
 #gzip_buffers 16 8k;
 #gzip_http_version 1.1;
 #gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

# Support socket.io, proteger via auth plugin
location = /millegrilles/socket.io/ {
  proxy_pass        $upstream_node_millegrilles;

  include /etc/nginx/conf.d/component_base_auth.include;
  # include /etc/nginx/conf.d/component_base.include;
}

# Application React - s'occupe de l'authentification (non protege)
location /millegrilles {
  proxy_pass        $upstream_node_millegrilles;

  proxy_set_header  X-Real-IP $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Proto $scheme;
}

location ~ (^/coupdoeil/?$|^/coupdoeil/(sockjs-node|static|main\..*|.*\.hot-update.json)) {
 proxy_pass        $upstream_react_coupdoeil;
 include /etc/nginx/conf.d/component_base_auth.include;
}
location /coupdoeil {
  proxy_pass        $upstream_node_coupdoeil;
  include /etc/nginx/conf.d/component_base_auth.include;
}


# Chargement de /publication via dev React
# /publication
# /publication/sock-js.node
# /publication/main.*
# /publication/static/*
location ~ (^/publication$|^/publication/(sockjs-node|static|main\..*|.*\.hot-update.json)) {
  # Protection via auth plugin
  proxy_pass        $upstream_react_publication;

  include /etc/nginx/conf.d/component_base_auth.include;
}
location /publication {
  proxy_pass        $upstream_node_publication;

  include /etc/nginx/conf.d/component_base_auth.include;
}

# Chargement de /vitrine via dev React
# /vitrine
# /vitrine/sock-js.node
# /vitrine/main.*
# /vitrine/static/*
# NOTE : s'assurer que /var/opt/millegrilles est o+rx
location = /vitrine/index.json {
  expires 0s;
  root /var/opt/millegrilles/nginx/data;
}
location /vitrine/data {
  expires 0s;
  root /var/opt/millegrilles/nginx/data;
}
#location /vitrine {
#  expires 0s;
#  root /var/opt/millegrilles/nginx/html;
#}
#location /vitrine/posts {
#  alias /var/opt/millegrilles/nginx/data/vitrine/posts;
#}
#location /vitrine/collections {
#  alias /var/opt/millegrilles/nginx/data/vitrine/collections;
#}
location ~ (^/vitrine$|^/vitrine/(sockjs-node|static|main\..*|.*\.hot-update.json|locales)) {
  proxy_pass        $upstream_react_vitrine;
  proxy_set_header  X-Real-IP $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  X-Forwarded-Proto $scheme;

  # Support WSS
  proxy_set_header  Upgrade $http_upgrade;
  proxy_set_header  Connection $connection_upgrade;
  proxy_set_header  Host $host;
}
#location /vitrine/section {
#  # rewrite ^(.*)$ /vitrine/index.html;
#  proxy_pass        $upstream_react_vitrine;
#}
#location = /vitrine/ {
#  return 301 https://$http_host/vitrine;
#}
location /vitrine/socket.io {
  proxy_pass $upstream_node_vitrine;
  include /etc/nginx/conf.d/component_base.include;
}
#location /vitrine {
#  expires 0s;
#  proxy_pass $upstream_node_vitrine;
#  include /etc/nginx/conf.d/component_base.include;
#}
location = /vitrine {
  return 301 https://$http_host/vitrine/;
}

location /vitrine {
  proxy_pass $upstream_react_vitrine;
  include /etc/nginx/conf.d/component_base.include;
}
#location = /vitrine {
#  rewrite ^(.*)$ /vitrine/index.html;
#}
#location /vitrine_site1 {
#  alias /var/opt/millegrilles/nginx/html/vitrine;
#  include /etc/nginx/conf.d/component_base.include;
#}

# Chargement de /grosfichiers via dev React
# /grosfichiers
# /grosfichiers/sock-js.node
# /grosfichiers/main.*
# /grosfichiers/static/*
location ~ (^/grosfichiers$|^/grosfichiers/(sockjs-node|static|main\..*|.*\.hot-update.json)) {
 proxy_pass        $upstream_react_grosfichiers;

 include /etc/nginx/conf.d/component_base_auth.include;

 #proxy_set_header  X-Real-IP $remote_addr;
 #proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
 #proxy_set_header  X-Forwarded-Proto $scheme;

 # Support WSS
 proxy_set_header  Upgrade $http_upgrade;
 proxy_set_header  Connection $connection_upgrade;
 proxy_set_header  Host $host;

}
location /grosfichiers {
  proxy_pass        $upstream_node_grosfichiers;
  include /etc/nginx/conf.d/component_base_auth.include;
}

# Chargement de /senseurspassifs via dev React
# /senseurspassifs
# /senseurspassifs/sock-js.node
# /senseurspassifs/main.*
# /senseurspassifs/static/*
location ~ (^/senseurspassifs/?$|^/senseurspassifs/(sockjs-node|static|main\..*|.*\.hot-update.json)) {
 proxy_pass        $upstream_react_senseurspassifs;
 include /etc/nginx/conf.d/component_base_auth.include;
}
location /senseurspassifs {
  proxy_pass        $upstream_node_senseurspassifs;
  include /etc/nginx/conf.d/component_base_auth.include;
}

# Chargement de /place via dev React
# /place
# /place/sock-js.node
# /place/main.*
# /place/static/*
location ~ (^/place$|^/place/(sockjs-node|static|main\..*|.*\.hot-update.json)) {
 proxy_pass   $upstream_react_place;
 include /etc/nginx/conf.d/component_base_auth.include;
}
#location ~ /place/(forum|fichiers) {
#  rewrite ^(.*)$ /place/index.html;
#}
location /place {
  proxy_pass  $upstream_node_place;
  include /etc/nginx/conf.d/component_base_auth.include;
}

location /site1/fichiers {
  expires 1y;
  root /var/opt/millegrilles/nginx/html;
  include /etc/nginx/conf.d/component_base.include;
  include /etc/nginx/conf.d/component_cors.include;
}

location /site1 {
  expires 0s;
  root /var/opt/millegrilles/nginx/html;
  include /etc/nginx/conf.d/component_base.include;
  include /etc/nginx/conf.d/component_cors.include;
}
